{"version":3,"sources":["components/previewCollection/PreviewCollection.jsx","components/collectionOverview/CollectionOverview.jsx","components/collectionOverview/CollectionsOverviewContainer.jsx","redux/shop/shopSelector.js","components/withSpinner/WithSpinner.jsx","components/collectionItem/CollectionItemStyles.jsx","components/collectionItem/CollectionItem.jsx"],"names":["withRouter","props","className","onClick","history","push","match","path","title","toLowerCase","toUpperCase","items","filter","item","index","map","CollectionItem","key","id","mapStateToProps","createStructuredSelector","collections","collectionPreviewSelector","connect","console","log","collection","isLoading","isFetchingSelector","CollectionOverviewContainer","compose","withSpinner","CollectionOverview","shopSelector","state","shop","collectionsSelector","createSelector","Object","values","collectionSelector","urlParam","isFetching","isCollectionsLoadedSelector","WithSpinner","Component","otherProps","CollectionItemStyles","styled","div","CollectionImageStyles","imageUrl","CollectionFooterStyles","AddItemButtonStyles","CustomButton","dispatch","addItem","name","price","isInverted"],"mappings":"uNAqBeA,eAfW,SAACC,GAC1B,OACC,yBAAKC,UAAU,qBACd,wBAAIA,UAAU,QAAQC,QAAW,kBAAMF,EAAMG,QAAQC,KAAd,UAAsBJ,EAAMK,MAAMC,KAAlC,YAA0CN,EAAMO,MAAMC,kBAAoBR,EAAMO,MAAME,eAC7H,yBAAKR,UAAU,WAEbD,EAAMU,MAAMC,QAAO,SAACC,EAAKC,GAAN,OAAgBA,EAAM,KAAGC,KAAI,SAACF,GAChD,OAAO,kBAACG,EAAA,EAAD,CAAgBC,IAAKJ,EAAKK,GAAIL,KAAMA,Y,wBCU3CM,EAAkBC,YAAyB,CAChDC,YAAaC,MAGCC,cAAQJ,EAARI,EAjBY,SAACtB,GAExB,OADHuB,QAAQC,IAAIxB,GAEX,yBAAKC,UAAU,sBAEbD,EAAMoB,YAAYN,KAAI,SAACW,GACtB,OAAO,kBAAC,EAAD,CAAmBT,IAAKS,EAAWR,GAAIV,MAAOkB,EAAWlB,MAAOG,MAAOe,EAAWf,e,gBCNxFQ,EAAiBC,YAAyB,CAC5CO,UAAYC,MAGVC,EAA+BC,YACjCP,YAAQJ,GACRY,IAFiCD,CAGnCE,GAEaH,a,gCCnBf,oJAEMI,EAAe,SAACC,GAAD,OAAWA,EAAMC,MAEzBC,EAAsBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKd,eAGNC,EAA4Be,YACrC,CAACD,IACD,SAACf,GAAD,OAAiBA,EAAciB,OAAOC,OAAOlB,GAAe,MAGnDmB,EAAqB,SAACC,GAAD,OAAcJ,YAC5C,CAACD,IACD,SAACf,GAAD,OAAiBA,EAAcA,EAAYoB,GAAY,SAG9Cb,EAAqBS,YAC9B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKO,cAGNC,EAA8BN,YACvC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKd,gB,kECXNuB,IAZK,SAAAC,GAAS,OAAI,YAAgC,IAA9BlB,EAA6B,EAA7BA,UAAamB,EAAgB,6BAC5D,OAAOnB,EAEC,yBAAKzB,UAAU,WACX,yBAAKA,UAAU,mBAIvB,kBAAC2C,EAAcC,M,m+BCRhB,IAAMC,EAAuBC,IAAOC,IAAV,KAqBpBC,EAAwBF,IAAOC,IAAV,KAMT,gBAAEE,EAAF,EAAEA,SAAF,oBAAuBA,EAAvB,QAGZC,EAAyBJ,IAAOC,IAAV,KAMtBI,EAAsBL,YAAOM,IAAPN,CAAH,K,gBChBjBzB,gBAAQ,MAJI,SAACgC,GAC3B,MAAO,CAACC,QAAU,SAAC3C,GAAD,OAAU0C,EAASC,YAAQ3C,QAG/BU,EAjBQ,SAACtB,GACvB,OACC,kBAAC8C,EAAD,KACC,kBAACG,EAAD,CAAuBhD,UAAU,kBAAkBiD,SAAUlD,EAAMY,KAAKsC,WACxE,kBAACC,EAAD,KACC,8BAAOnD,EAAMY,KAAK4C,MAClB,uCAAQxD,EAAMY,KAAK6C,QAEpB,kBAACL,EAAD,CAAqBnD,UAAU,gBAAgByD,YAAY,EAAMxD,QAAS,kBAAOF,EAAMuD,QAAQvD,EAAMY,QAArG","file":"static/js/4.572a1037.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./PreviewCollection.scss\"\r\nimport CollectionItem from \"../collectionItem/CollectionItem.jsx\"\r\n\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nconst PreviewCollection = (props) => {\r\n\treturn(\r\n\t\t<div className=\"previewCollection\" >\r\n\t\t\t<h1 className=\"title\" onClick = {() => props.history.push(`${props.match.path}/${props.title.toLowerCase()}`)} >{props.title.toUpperCase()}</h1>\r\n\t\t\t<div className=\"preview\">\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.items.filter((item,index) => index<4).map((item)=> {\r\n\t\t\t\t\t\treturn <CollectionItem key={item.id} item={item}/>\r\n\t\t\t\t\t}) \r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default withRouter(PreviewCollection)","import React from \"react\"\r\nimport \"./CollectionOverview.scss\"\r\n\r\nimport PreviewCollection from \"../previewCollection/PreviewCollection\"\r\n\r\nimport {connect} from \"react-redux\"\r\n\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport {collectionPreviewSelector} from \"../../redux/shop/shopSelector\"\r\n\r\nconst CollectionOverview = (props) => {\r\n\tconsole.log(props)\r\n    return(\r\n\t\t<div className=\"collectionOverview\">\r\n\t\t\t{\r\n\t\t\t\tprops.collections.map((collection) => {\r\n\t\t\t\t\treturn <PreviewCollection key={collection.id} title={collection.title} items={collection.items}/>\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n\tcollections: collectionPreviewSelector\r\n})\r\n\r\nexport default connect(mapStateToProps)(CollectionOverview)","import CollectionOverview from \"./CollectionOverview\"\r\n\r\nimport {compose} from \"redux\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport {isFetchingSelector} from \"../../redux/shop/shopSelector\"\r\n\r\nimport withSpinner from \"../withSpinner/WithSpinner\"\r\n\r\nconst mapStateToProps= createStructuredSelector({\r\n    isLoading : isFetchingSelector\r\n})\r\n\r\nconst CollectionOverviewContainer =  compose(\r\n    connect(mapStateToProps),\r\n    withSpinner\r\n)(CollectionOverview)\r\n\r\nexport default CollectionOverviewContainer","import {createSelector} from \"reselect\"\r\n\r\nconst shopSelector = (state) => state.shop\r\n\r\nexport const collectionsSelector = createSelector(\r\n    [shopSelector],\r\n    (shop) => shop.collections\r\n)\r\n\r\nexport const collectionPreviewSelector = createSelector(\r\n    [collectionsSelector],\r\n    (collections) => collections ? Object.values(collections) : []\r\n)\r\n\r\nexport const collectionSelector = (urlParam) => createSelector(\r\n    [collectionsSelector],\r\n    (collections) => collections ? collections[urlParam] : null\r\n)\r\n\r\nexport const isFetchingSelector = createSelector(\r\n    [shopSelector],\r\n    (shop) => shop.isFetching\r\n)\r\n\r\nexport const isCollectionsLoadedSelector = createSelector(\r\n    [shopSelector],\r\n    (shop) => !!shop.collections\r\n)","import React from \"react\"\r\nimport \"./WithSpinner.scss\"\r\n\r\nconst WithSpinner = Component => ({isLoading,...otherProps}) => {\r\n    return isLoading ? \r\n        (\r\n            <div className=\"spinner\">\r\n                <div className=\"spinnerLoader\"></div>\r\n            </div>\r\n        ) : \r\n    \r\n        <Component {...otherProps}/>\r\n\r\n}\r\n\r\nexport default WithSpinner","import styled from \"styled-components\"\r\nimport CustomButton from \"../customButton/CustomButton\"\r\n\r\nexport const CollectionItemStyles = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    &:hover{\r\n\t\t.collectionImage {\r\n\t\t\topacity: .8;\r\n\r\n\t\t}\r\n\r\n\t\t.addItemButton{\r\n\t\t\tdisplay: flex;\r\n\t\t\topacity: 0.85\r\n\t\t}\r\n\t}\r\n\r\n`\r\nexport const CollectionImageStyles = styled.div`\r\n    width :100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n    background-image : ${({imageUrl}) => `url(${imageUrl})`}\r\n`\r\n\r\nexport const CollectionFooterStyles = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const AddItemButtonStyles = styled(CustomButton)`\r\n    width : 90%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top : 250px;\r\n    display: none;\r\n`","import React from \"react\"\r\nimport {CollectionItemStyles,CollectionImageStyles,CollectionFooterStyles,AddItemButtonStyles} from \"./CollectionItemStyles\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {addItem } from \"../../redux/cart/cartActions\"\r\n\r\nconst CollectionItem = (props) => {\r\n\treturn(\r\n\t\t<CollectionItemStyles>\r\n\t\t\t<CollectionImageStyles className=\"collectionImage\" imageUrl={props.item.imageUrl} />\r\n\t\t\t<CollectionFooterStyles >\r\n\t\t\t\t<span>{props.item.name}</span>\r\n\t\t\t\t<span>â‚¹{props.item.price}</span>\r\n\t\t\t</CollectionFooterStyles>\r\n\t\t\t<AddItemButtonStyles className=\"addItemButton\" isInverted={true} onClick={() =>  props.addItem(props.item)}>Add To Cart</AddItemButtonStyles>\r\n\t\t</CollectionItemStyles>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {addItem : (item) => dispatch(addItem(item))}\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(CollectionItem)"],"sourceRoot":""}