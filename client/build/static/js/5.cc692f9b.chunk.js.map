{"version":3,"sources":["pages/collectionPage/CollectionPage.jsx","pages/collectionPage/CollectionPageContainer.jsx","redux/shop/shopSelector.js","components/withSpinner/WithSpinner.jsx","components/collectionItem/CollectionItemStyles.jsx","components/collectionItem/CollectionItem.jsx"],"names":["connect","state","ownProps","collection","collectionSelector","match","params","collectionId","props","console","log","className","title","items","map","item","CollectionItem","key","id","mapStateToProps","createStructuredSelector","isLoading","isCollectionsLoadedSelector","CollectionPageContainer","compose","withSpinner","CollectionPage","shopSelector","shop","collectionsSelector","createSelector","collections","collectionPreviewSelector","Object","values","urlParam","isFetchingSelector","isFetching","WithSpinner","Component","otherProps","CollectionItemStyles","styled","div","CollectionImageStyles","imageUrl","CollectionFooterStyles","AddItemButtonStyles","CustomButton","dispatch","addItem","name","price","isInverted","onClick"],"mappings":"kMA2BeA,eAJS,SAACC,EAAMC,GAAP,MACpB,CAAEC,WAAaC,YAAmBF,EAASG,MAAMC,OAAOC,aAAzCH,CAAuDH,MAG3DD,EApBQ,SAACQ,GAEpB,OADAC,QAAQC,IAAIF,GAER,yBAAKG,UAAU,kBACX,4BAAKH,EAAML,WAAWS,OACtB,yBAAKD,UAAU,mBAEXH,EAAML,WAAWU,MAAMC,KAAI,SAAAC,GACvB,OAAO,kBAACC,EAAA,EAAD,CAAgBC,IAAKF,EAAKG,GAAIH,KAAMA,Y,wBCLzDI,EAAkBC,YAAyB,CAC7CC,UAAY,SAAApB,GAAK,OAAKqB,YAA4BrB,MAGhDsB,EAA0BC,YAC5BxB,YAAQmB,GACRM,IAF4BD,CAG9BE,GAEaH,a,gCCnBf,oJAEMI,EAAe,SAAC1B,GAAD,OAAWA,EAAM2B,MAEzBC,EAAsBC,YAC/B,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKG,eAGNC,EAA4BF,YACrC,CAACD,IACD,SAACE,GAAD,OAAiBA,EAAcE,OAAOC,OAAOH,GAAe,MAGnD3B,EAAqB,SAAC+B,GAAD,OAAcL,YAC5C,CAACD,IACD,SAACE,GAAD,OAAiBA,EAAcA,EAAYI,GAAY,SAG9CC,EAAqBN,YAC9B,CAACH,IACD,SAACC,GAAD,OAAUA,EAAKS,cAGNf,EAA8BQ,YACvC,CAACH,IACD,SAACC,GAAD,QAAYA,EAAKG,gB,kECXNO,IAZK,SAAAC,GAAS,OAAI,YAAgC,IAA9BlB,EAA6B,EAA7BA,UAAamB,EAAgB,6BAC5D,OAAOnB,EAEC,yBAAKV,UAAU,WACX,yBAAKA,UAAU,mBAIvB,kBAAC4B,EAAcC,M,m+BCRhB,IAAMC,EAAuBC,IAAOC,IAAV,KAqBpBC,EAAwBF,IAAOC,IAAV,KAMT,gBAAEE,EAAF,EAAEA,SAAF,oBAAuBA,EAAvB,QAGZC,EAAyBJ,IAAOC,IAAV,KAMtBI,EAAsBL,YAAOM,IAAPN,CAAH,K,gBChBjB1C,gBAAQ,MAJI,SAACiD,GAC3B,MAAO,CAACC,QAAU,SAACnC,GAAD,OAAUkC,EAASC,YAAQnC,QAG/Bf,EAjBQ,SAACQ,GACvB,OACC,kBAACiC,EAAD,KACC,kBAACG,EAAD,CAAuBjC,UAAU,kBAAkBkC,SAAUrC,EAAMO,KAAK8B,WACxE,kBAACC,EAAD,KACC,8BAAOtC,EAAMO,KAAKoC,MAClB,uCAAQ3C,EAAMO,KAAKqC,QAEpB,kBAACL,EAAD,CAAqBpC,UAAU,gBAAgB0C,YAAY,EAAMC,QAAS,kBAAO9C,EAAM0C,QAAQ1C,EAAMO,QAArG","file":"static/js/5.cc692f9b.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./CollectionPage.scss\"\r\nimport CollectionItem from \"../../components/collectionItem/CollectionItem\"\r\n\r\nimport {collectionSelector} from \"../../redux/shop/shopSelector\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst CollectionPage = (props) => {\r\n    console.log(props)\r\n    return(\r\n        <div className=\"collectionPage\">\r\n            <h1>{props.collection.title}</h1>\r\n            <div className=\"collectionItems\">\r\n            {\r\n                props.collection.items.map(item => {\r\n                    return <CollectionItem key={item.id} item={item}/>\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps) => (\r\n    { collection : collectionSelector(ownProps.match.params.collectionId)(state) }\r\n)\r\n\r\nexport default connect(mapStateToProps)(CollectionPage)","import CollectionPage from \"./CollectionPage\"\r\n\r\nimport {compose} from \"redux\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport {isCollectionsLoadedSelector} from \"../../redux/shop/shopSelector\"\r\n\r\nimport withSpinner from \"../../components/withSpinner/WithSpinner\"\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isLoading : state => !isCollectionsLoadedSelector(state)\r\n})\r\n\r\nconst CollectionPageContainer = compose(\r\n    connect(mapStateToProps),\r\n    withSpinner\r\n)(CollectionPage)\r\n\r\nexport default CollectionPageContainer","import {createSelector} from \"reselect\"\r\n\r\nconst shopSelector = (state) => state.shop\r\n\r\nexport const collectionsSelector = createSelector(\r\n    [shopSelector],\r\n    (shop) => shop.collections\r\n)\r\n\r\nexport const collectionPreviewSelector = createSelector(\r\n    [collectionsSelector],\r\n    (collections) => collections ? Object.values(collections) : []\r\n)\r\n\r\nexport const collectionSelector = (urlParam) => createSelector(\r\n    [collectionsSelector],\r\n    (collections) => collections ? collections[urlParam] : null\r\n)\r\n\r\nexport const isFetchingSelector = createSelector(\r\n    [shopSelector],\r\n    (shop) => shop.isFetching\r\n)\r\n\r\nexport const isCollectionsLoadedSelector = createSelector(\r\n    [shopSelector],\r\n    (shop) => !!shop.collections\r\n)","import React from \"react\"\r\nimport \"./WithSpinner.scss\"\r\n\r\nconst WithSpinner = Component => ({isLoading,...otherProps}) => {\r\n    return isLoading ? \r\n        (\r\n            <div className=\"spinner\">\r\n                <div className=\"spinnerLoader\"></div>\r\n            </div>\r\n        ) : \r\n    \r\n        <Component {...otherProps}/>\r\n\r\n}\r\n\r\nexport default WithSpinner","import styled from \"styled-components\"\r\nimport CustomButton from \"../customButton/CustomButton\"\r\n\r\nexport const CollectionItemStyles = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 350px;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    &:hover{\r\n\t\t.collectionImage {\r\n\t\t\topacity: .8;\r\n\r\n\t\t}\r\n\r\n\t\t.addItemButton{\r\n\t\t\tdisplay: flex;\r\n\t\t\topacity: 0.85\r\n\t\t}\r\n\t}\r\n\r\n`\r\nexport const CollectionImageStyles = styled.div`\r\n    width :100%;\r\n    height: 95%;\r\n    background-size: cover;\r\n    background-position: center;\r\n    margin-bottom: 5px;\r\n    background-image : ${({imageUrl}) => `url(${imageUrl})`}\r\n`\r\n\r\nexport const CollectionFooterStyles = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const AddItemButtonStyles = styled(CustomButton)`\r\n    width : 90%;\r\n    opacity: 0.7;\r\n    position: absolute;\r\n    top : 250px;\r\n    display: none;\r\n`","import React from \"react\"\r\nimport {CollectionItemStyles,CollectionImageStyles,CollectionFooterStyles,AddItemButtonStyles} from \"./CollectionItemStyles\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {addItem } from \"../../redux/cart/cartActions\"\r\n\r\nconst CollectionItem = (props) => {\r\n\treturn(\r\n\t\t<CollectionItemStyles>\r\n\t\t\t<CollectionImageStyles className=\"collectionImage\" imageUrl={props.item.imageUrl} />\r\n\t\t\t<CollectionFooterStyles >\r\n\t\t\t\t<span>{props.item.name}</span>\r\n\t\t\t\t<span>â‚¹{props.item.price}</span>\r\n\t\t\t</CollectionFooterStyles>\r\n\t\t\t<AddItemButtonStyles className=\"addItemButton\" isInverted={true} onClick={() =>  props.addItem(props.item)}>Add To Cart</AddItemButtonStyles>\r\n\t\t</CollectionItemStyles>\r\n\t);\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {addItem : (item) => dispatch(addItem(item))}\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(CollectionItem)"],"sourceRoot":""}