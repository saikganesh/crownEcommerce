{"version":3,"sources":["components/checkoutItem/CheckoutItem.jsx","components/stripeButton/StripeButton.jsx","pages/checkoutPage/CheckoutPage.jsx"],"names":["connect","props","className","src","item","imageUrl","alt","name","onClick","quantity","dispatch","removeItem","deleteCartItem","addItem","price","StripeButton","stripePrice","description","panelLabel","billingAddress","shippingAddress","image","amount","token","axios","url","method","data","then","resp","console","log","catch","error","stripeKey","currency","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","cartTotal","findCartTotal","map","cartItem","key","id","style","height","width"],"mappings":"uNA8BeA,iBAxBM,SAACC,GAClB,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,aACX,yBAAKC,IAAKF,EAAMG,KAAKC,SAAUC,IAAI,UAEvC,yBAAKJ,UAAU,YAAYD,EAAMG,KAAKG,MACtC,yBAAKL,UAAU,gBACX,yBAAKA,UAAU,SAASM,QAAS,kBAAKP,EAAMG,KAAKK,UAAU,EAAIR,EAAMS,SAASC,YAAWV,EAAMG,OACjFH,EAAMS,SAASE,YAAeX,EAAMG,SADlD,UAEA,yBAAKF,UAAU,SAASD,EAAMG,KAAKK,UACnC,yBAAKP,UAAU,SAASM,QAAU,kBAAMP,EAAMG,KAAKK,UAAY,GAAK,KAAOR,EAAMS,SAASG,YAAQZ,EAAMG,SAAxG,WAGJ,yBAAKF,UAAU,aAAf,SAA6BD,EAAMG,KAAKK,SAAWR,EAAMG,KAAKU,MAA9D,KACA,yBAAKZ,UAAU,eAAeM,QAAS,kBAAMP,EAAMS,SAASE,YAAeX,EAAMG,SAAjF,c,oCCYGW,EA7BM,SAACd,GAClB,IAAMe,EAA0B,IAAZf,EAAMa,MAc1B,OAAO,kBAAC,IAAD,CACHP,KAAO,oBACPU,YAAW,yBAAsBhB,EAAMa,OACvCI,WAAa,UACbC,gBAAc,EACdC,iBAAe,EACfC,MAAQ,sCACRC,OAAUN,EACVO,MAnBY,SAACA,GACbC,IAAM,CACFC,IAAK,UACLC,OAAS,OACTC,KAAO,CACHL,OAAQN,EACRO,WAELK,MAAK,SAAAC,GAAI,OAAIC,QAAQC,IAAIF,MAAOG,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,OAY9DC,UAtBiB,6CAuBjBC,SAAS,S,gBCoBXC,EAAkBC,YAAyB,CAC7CC,UAAYC,IACZC,UAAYC,MAGDzC,sBAAQoC,EAARpC,EA7CM,SAACC,GAClB,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,iBAAhB,YAEJ,yBAAKA,UAAU,eACX,0BAAMA,UAAU,iBAAhB,gBAEJ,yBAAKA,UAAU,eACX,0BAAMA,UAAU,iBAAhB,aAEJ,yBAAKA,UAAU,eACX,0BAAMA,UAAU,iBAAhB,UAEJ,yBAAKA,UAAU,eACX,0BAAMA,UAAU,iBAAhB,YAIAD,EAAMqC,UAAUI,KAAI,SAAAC,GAChB,OAAO,kBAAC,EAAD,CAAcC,IAAKD,EAASE,GAAIzC,KAAMuC,OAGzD,yBAAKG,MAAQ,CAACC,OAAQ,OAASC,MAAQ,SACnC,0BAAM9C,UAAU,SAAhB,kBAAmCD,EAAMuC,YAE7C,yBAAKtC,UAAU,eAAf,4FAMA,kBAAC,EAAD,CAAcY,MAAOb,EAAMuC","file":"static/js/7.d67a97ec.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./CheckoutItem.scss\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {deleteCartItem,removeItem,addItem} from \"../../redux/cart/cartActions\"\r\n\r\nconst CheckoutItem = (props) => {\r\n    return(\r\n        <div className=\"checkoutItem\">\r\n            <div className=\"itemImage\">\r\n                <img src={props.item.imageUrl} alt=\"item\"/>\r\n            </div>\r\n            <div className=\"itemName\">{props.item.name}</div>\r\n            <div className=\"itemQuantity\">\r\n                <div className=\"arrows\" onClick={()=> props.item.quantity>=2 ? props.dispatch(removeItem(props.item)) \r\n                            : props.dispatch(deleteCartItem(props.item))}>&#10094;</div>\r\n                <div className=\"value\">{props.item.quantity}</div>\r\n                <div className=\"arrows\" onClick ={() => props.item.quantity >= 10 ? null : props.dispatch(addItem(props.item)) } >\r\n                    &#10095;</div>\r\n            </div>\r\n            <div className=\"itemPrice\">₹{props.item.quantity * props.item.price} </div>\r\n            <div className=\"removeButton\" onClick={() => props.dispatch(deleteCartItem(props.item))}>&#10005;</div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default connect()(CheckoutItem);","import React from \"react\"\r\nimport StripeCheckout from \"react-stripe-checkout\"\r\nimport axios from 'axios'\r\n\r\nconst StripeButton = (props) => {\r\n    const stripePrice = props.price*100\r\n    const publicApiKey = \"pk_test_MPlWMXFK724oCcfWU868YrXr0014Yc14Gp\"\r\n\r\n    const onToken = (token) => {\r\n        axios({\r\n            url :'payment',\r\n            method : 'post',\r\n            data : {\r\n                amount :stripePrice,\r\n                token,\r\n            }\r\n        }).then(resp => console.log(resp)).catch(error => console.log(error))\r\n    }\r\n\r\n    return <StripeCheckout \r\n        name = \"CROWN Enterprises\"\r\n        description = {`Your total is $${props.price}`}\r\n        panelLabel = \"Pay Now\"\r\n        billingAddress\r\n        shippingAddress\r\n        image = \"https://sendeyo.com/up/d/f3eb2117da\"\r\n        amount = {stripePrice}\r\n        token = {onToken}\r\n        stripeKey={publicApiKey}\r\n        currency=\"INR\"\r\n    />    \r\n}\r\n\r\nexport default StripeButton","import React from \"react\"\r\nimport \"./CheckoutPage.scss\"\r\nimport CheckoutItem from \"../../components/checkoutItem/CheckoutItem\"\r\nimport StripeButton from \"../../components/stripeButton/StripeButton\"\r\n\r\nimport {connect} from \"react-redux\"\r\nimport {createStructuredSelector} from \"reselect\"\r\nimport {selectCartItems,findCartTotal} from \"../../redux/cart/cartSelectors\"\r\n\r\nconst CheckoutPage = (props) => {\r\n    return(\r\n        <div className=\"checkoutPage\">\r\n            <div className=\"checkoutHeader\">\r\n                <div className=\"headerBlock\">\r\n                    <span className=\"headerContent\">Product</span>\r\n                </div>\r\n                <div className=\"headerBlock\">\r\n                    <span className=\"headerContent\">Description</span>\r\n                </div>\r\n                <div className=\"headerBlock\">\r\n                    <span className=\"headerContent\">Quantity</span>\r\n                </div>\r\n                <div className=\"headerBlock\">\r\n                    <span className=\"headerContent\">Price</span>\r\n                </div>\r\n                <div className=\"headerBlock\">\r\n                    <span className=\"headerContent\">Remove</span>\r\n                </div>\r\n            </div>\r\n                {\r\n                    props.cartItems.map(cartItem=> {\r\n                        return <CheckoutItem key={cartItem.id} item={cartItem}/>\r\n                    })\r\n                }\r\n            <div style ={{height: \"60px\" , width : \"100%\"}}>\r\n                <span className=\"total\"> TOTAL : ₹{props.cartTotal}</span>\r\n            </div>\r\n            <div className=\"testPayment\">\r\n                Use the following details for testing : \r\n                   Num -  4242 4242 4242 4242\r\n                   Exp - 11/24\r\n                   CVC - 123\r\n            </div>\r\n            <StripeButton price={props.cartTotal} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems : selectCartItems,\r\n    cartTotal : findCartTotal\r\n})\r\n\r\nexport default connect(mapStateToProps)(CheckoutPage)"],"sourceRoot":""}